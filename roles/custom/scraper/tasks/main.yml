- name: Install python dependencies
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  apt: name={{ item }} state=present update_cache=yes
  with_items:
    - postgresql-client
    - libpq-dev
    - phantomjs
    - libxml2-dev
    - libxslt1-dev
    - redis-tools
    - redis-server
    - ffmpeg

- name: git clone from ikeikeikeike/panglao-scraper.git
  sudo_user: "{{ username }}"
  git:
    repo: git@github.com:ikeikeikeike/panglao-scraper.git
    dest: "/home/{{ username }}/panglao-scraper"
    version: master
    update: yes
    accept_hostkey: yes

- name: setup install
  sudo_user: "{{ username }}"
  shell: |
    cd /home/{{ username }}/panglao-scraper &&
    /home/{{ username }}/venv/bin/python setup.py install

- file: path=/home/{{ username }}/panglao-scraper/scraper/scraper/settings_production.py state=touch owner={{ username }} group={{ username }} mode=0555
- name: Configure settings_production.py
  sudo_user: "{{ username }}"
  blockinfile:
    dest: /home/{{ username }}/panglao-scraper/scraper/scraper/settings_production.py
    insertafter: EOF
    content: |
        {{ scraper_settings }}

- name: migrate cheapcdn local db
  sudo_user: "{{ username }}"
  shell: |
    cd /home/{{ username }}/panglao-scraper/scraper &&
    DJANGO_SETTINGS_MODULE=scraper.settings_production /home/{{ username }}/venv/bin/python manage.py migrate

- name: migrate cheapcdn
  sudo_user: "{{ username }}"
  shell: |
    cd /home/{{ username }}/panglao-scraper/scraper &&
    DJANGO_SETTINGS_MODULE=scraper.settings_production /home/{{ username }}/venv/bin/python manage.py migrate cheapcdn --database=cheapcdn
  when: inventory_hostname == "object2"

- file: path=/home/{{ username }}/update_youtube_dl.sh state=touch owner={{ username }} group={{ username }} mode=0755
- name: Configure update_youtube_dl.sh
  sudo_user: "{{ username }}"
  blockinfile:
    dest: /home/{{ username }}/update_youtube_dl.sh
    insertafter: EOF
    content: |
        {{ update_youtube_dl }}


- name: set diskfree command into cron
  cron:
    name: set diskfree command into cron
    user: "{{ username }}"
    minute: "*/5"
    job: "cd /home/{{ username }}/panglao-scraper/scraper &&
            DJANGO_SETTINGS_MODULE=scraper.settings_production
              /home/{{ username }}/venv/bin/python manage.py diskfree >> /tmp/diskfree.log 2>&1"

- name: update update_youtube_dl and graceful restart python daemon into cron
  cron:
    name: update update_youtube_dl
    user: "{{ username }}"
    minute: 45
    hour: "*/12"
    day: "*"
    job: "sh /home/{{ username }}/update_youtube_dl.sh >> /tmp/batch.log 2>&1"

- name: clean weste into cron
  cron:
    name: clean weste
    minute: "*/10"
    job: "/usr/bin/find /tmp -maxdepth 1 -type f -user {{ username }} -mmin +240 -exec rm {} \\;"
